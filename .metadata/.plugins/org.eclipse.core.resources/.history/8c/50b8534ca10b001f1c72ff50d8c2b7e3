#include "app_main.hpp"
#include "gpio.hpp"

volatile uint8_t flag = 0;

void TIM6_IRQHandler(void) {
    // Timer interrupt handler code here
    // This function will be called when TIM6 interrupt occurs
    // Clear the interrupt flag
    TIM6->SR &= ~TIM_SR_UIF;
}

void app_main(void)
{
	Gpio userBtn(PIN_0, GPIOA, INPUT, NO_PULL);
	userBtn.AttachInterupt(ANY_EDGE);

	Gpio greenLed(PIN_12, GPIOD, OUTPUT);
	Gpio redLed(PIN_13, GPIOD, OUTPUT);
	Gpio blueLed(PIN_14, GPIOD, OUTPUT);
	Gpio yellowLed(PIN_15, GPIOD, OUTPUT);
	while(true)
	{
		if(flag == 1)
		{
			greenLed.Write(HIGH);
			redLed.Write(HIGH);
			blueLed.Write(HIGH);
			yellowLed.Write(HIGH);
			flag = 0;
			HAL_Delay(1000);
		}else{
			greenLed.Write(LOW);
			redLed.Write(LOW);
			blueLed.Write(LOW);
			yellowLed.Write(LOW);
			HAL_Delay(1000);
		}
	}
}
