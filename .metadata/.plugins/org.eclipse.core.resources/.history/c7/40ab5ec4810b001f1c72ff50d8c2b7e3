#include "app_main.hpp"
#include "gpio.hpp"

volatile uint8_t flag = 0;

extern "C" void EXTI0_IRQHandler(void) {
    // Your interrupt handling code for pin 0
    // This function will be called when the interrupt for pin 0 occurs
    // Clear the interrupt flag
    EXTI->PR |= 0x1UL << PIN_0;
    flag =
}


void app_main(void)
{
	Gpio userBtn(PIN_0, GPIOA, INPUT, NO_PULL);
	userBtn.AttachInterupt(RISING);

	Gpio greenLed(PIN_12, GPIOD, OUTPUT);
	Gpio redLed(PIN_13, GPIOD, OUTPUT);
	Gpio blueLed(PIN_14, GPIOD, OUTPUT);
	Gpio yellowLed(PIN_15, GPIOD, OUTPUT);
	PIN_STATE state;
	while(true)
	{
		state = userBtn.Read();
		if(state == HIGH)
		{
			greenLed.Write(HIGH);
			redLed.Write(HIGH);
			blueLed.Write(HIGH);
			yellowLed.Write(HIGH);
		}else{
			greenLed.Write(LOW);
			redLed.Write(LOW);
			blueLed.Write(LOW);
			yellowLed.Write(LOW);
		}
	}
}
